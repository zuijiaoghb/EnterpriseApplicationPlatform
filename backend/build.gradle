plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'application'
	id 'org.flywaydb.flyway' version '10.0.0' // 添加Flyway插件
} 

group = 'com.enterprise.platform'
version = '0.0.1-SNAPSHOT'


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}


repositories {
	gradlePluginPortal()
	mavenCentral()
	maven { url 'https://maven.aliyun.com/repository/central' }
	maven { url 'https://maven.aliyun.com/repository/public' }
	maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }	
	maven { url 'https://maven.aliyun.com/repository/jcenter' }
	maven { url 'https://maven.aliyun.com/repository/google' }
	maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
	maven { url 'https://repo1.maven.org/maven2/' }
    maven { url 'https://packages.microsoft.com/maven/repos/microsoft-maven-central' }		
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
}

dependencies {
    // 添加Hibernate JSON支持
    
    
    // 替换为兼容Spring Boot 3.x的Jackson版本
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.17.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.0'
    
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.31'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.data:spring-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    
    implementation 'mysql:mysql-connector-java:8.0.30'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.hibernate.validator:hibernate-validator:6.2.5.Final'
        
    implementation 'org.locationtech.jts:jts-core:1.18.2'
    // 添加Hibernate核心依赖（与Spring Boot 3.4.3兼容的版本）
    implementation 'org.hibernate.orm:hibernate-core:6.4.2.Final'
    
    // 确保JPA API版本匹配
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    

	implementation 'org.flywaydb:flyway-core:10.0.0'  // 更新Flyway核心版本
    implementation 'org.flywaydb:flyway-mysql:10.0.0' // 更新MySQL支持版本
    implementation 'com.microsoft.sqlserver:mssql-jdbc:11.2.3.jre17' // 更新到支持 Hibernate 6.4.2.Final 的版本
	
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    implementation 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'    
    
    // 添加Swagger/OpenAPI依赖
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    
    // 使用Spring Boot管理的Logback版本
    implementation 'org.springframework.boot:spring-boot-starter-logging'

    
    
    
}

tasks.named('test') {
	useJUnitPlatform()
}


application {
    // 修改为正确的主类全限定名
    mainClass = 'com.enterprise.platform.EnterpriseApplicationPlatform'
}


flyway {
    url = 'jdbc:mysql://188.188.1.25:3306/equipment?useSSL=false&serverTimezone=UTC'
    user = 'root'
    password = 'jtT_BI231107'
    locations = ['classpath:db/migration']
    baselineOnMigrate = true
}
bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
distTar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
distZip {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

